name: Java CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
#    paths: [ "NodeJS/**" ]
  pull_request:
    branches: [ "main" ]
#    paths: [ "NodeJS/**" ]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - run: cd Java && mvn checkstyle:checkstyle
      - run: cd Java && mvn clean package
      - run: docker build -t java-app Java

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

#      - name: Build and Analyze
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-pl

      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: Java/
          push: true
          tags: celeguim/java-app1:latest
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm64/v8
